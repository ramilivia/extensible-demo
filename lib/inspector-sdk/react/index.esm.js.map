{"version":3,"file":"index.esm.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/cjs/react-jsx-runtime.development.js","../../node_modules/react/jsx-runtime.js","../../src/core/FieldRegistry.ts","../../src/core/MessageBridge.ts","../../src/core/ContentUpdater.ts","../../src/core/OverlayManager.ts","../../src/core/Inspector.ts","../../src/react/HygraphInspector.tsx","../../src/react/useInspector.ts"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar React = require('react');\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nvar didWarnAboutKeySpread = {};\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    {\n      if (hasOwnProperty.call(props, 'key')) {\n        var componentName = getComponentNameFromType(type);\n        var keys = Object.keys(props).filter(function (k) {\n          return k !== 'key';\n        });\n        var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n        if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n          var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n          error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n          didWarnAboutKeySpread[componentName + beforeExample] = true;\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n// even with the prod transform. This means that jsxDEV is purely\n// opt-in behavior for better messages but that we won't stop\n// giving you warnings if you use production apis.\n\nfunction jsxWithValidationStatic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, true);\n  }\n}\nfunction jsxWithValidationDynamic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, false);\n  }\n}\n\nvar jsx =  jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.\n// for now we can ship identical prod functions\n\nvar jsxs =  jsxWithValidationStatic ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsx;\nexports.jsxs = jsxs;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * FieldRegistry - Tracks and manages DOM elements with Hygraph data attributes\n * Maintains mapping of entryId:fieldApiId → HTMLElements for content updates\n */\n\nimport type {\n  InspectorConfig,\n  RegisteredElement,\n  ElementRegistry,\n  RegistryKey,\n} from '../types';\n\nexport class FieldRegistry {\n  private config: InspectorConfig;\n  private registry: ElementRegistry = {};\n  private observer: MutationObserver | null = null;\n  private isDestroyed = false;\n\n  constructor(config: InspectorConfig) {\n    this.config = config;\n    this.initializeObserver();\n    this.scanExistingElements();\n  }\n\n  /**\n   * Get all elements for a specific field\n   */\n  getElementsForField(fieldApiId: string, locale?: string): RegisteredElement[] {\n    const elements: RegisteredElement[] = [];\n\n    // Search through all registry entries for matching fieldApiId and locale\n    for (const elementList of Object.values(this.registry)) {\n      for (const element of elementList) {\n        if (element.fieldApiId === fieldApiId && element.locale === locale) {\n          elements.push(element);\n        }\n      }\n    }\n\n    return elements;\n  }\n\n  /**\n   * Get all elements for a specific entry\n   */\n  getElementsForEntry(entryId: string): RegisteredElement[] {\n    const elements: RegisteredElement[] = [];\n\n    for (const elementList of Object.values(this.registry)) {\n      for (const element of elementList) {\n        if (element.entryId === entryId) {\n          elements.push(element);\n        }\n      }\n    }\n\n    return elements;\n  }\n\n  /**\n   * Get specific element by exact match\n   */\n  getElement(entryId: string, fieldApiId?: string, locale?: string): RegisteredElement | null {\n    const key = this.createRegistryKey(entryId, fieldApiId, locale);\n    const elements = this.registry[key];\n    return elements?.[0] || null;\n  }\n\n  /**\n   * Refresh registry - scan for new elements\n   */\n  refresh(): void {\n    if (this.isDestroyed) return;\n    this.scanExistingElements();\n  }\n\n  /**\n   * Destroy registry and clean up observers\n   */\n  destroy(): void {\n    this.isDestroyed = true;\n    this.observer?.disconnect();\n    this.registry = {};\n  }\n\n  private initializeObserver(): void {\n    // Set up MutationObserver to watch for DOM changes\n    this.observer = new MutationObserver((mutations) => {\n      if (this.isDestroyed) return;\n\n      for (const mutation of mutations) {\n        // Handle added nodes\n        if (mutation.type === 'childList') {\n          for (const node of mutation.addedNodes) {\n            if (node.nodeType === Node.ELEMENT_NODE) {\n              this.scanElement(node as HTMLElement);\n            }\n          }\n        }\n\n        // Handle attribute changes\n        if (mutation.type === 'attributes' && mutation.attributeName?.startsWith('data-hygraph-')) {\n          this.updateElementRegistration(mutation.target as HTMLElement);\n        }\n      }\n    });\n\n    this.observer.observe(document.body, {\n      childList: true,\n      subtree: true,\n      attributes: true,\n      attributeFilter: [\n        'data-hygraph-entry-id',\n        'data-hygraph-field-api-id',\n        'data-hygraph-field-locale',\n      ],\n    });\n  }\n\n  private scanExistingElements(): void {\n    const elements = document.querySelectorAll('[data-hygraph-entry-id]');\n    elements.forEach((element) => this.scanElement(element as HTMLElement));\n  }\n\n  private scanElement(element: HTMLElement): void {\n    if (this.hasHygraphAttributes(element)) {\n      this.registerElement(element);\n    }\n\n    // Also scan children\n    const children = element.querySelectorAll('[data-hygraph-entry-id]');\n    children.forEach((child) => this.registerElement(child as HTMLElement));\n  }\n\n  private hasHygraphAttributes(element: HTMLElement): boolean {\n    return element.hasAttribute('data-hygraph-entry-id');\n  }\n\n  private registerElement(element: HTMLElement): void {\n    const entryId = element.getAttribute('data-hygraph-entry-id');\n    if (!entryId) return;\n\n    const fieldApiId = element.getAttribute('data-hygraph-field-api-id') || undefined;\n    const locale = element.getAttribute('data-hygraph-field-locale') || undefined;\n\n    const registeredElement: RegisteredElement = {\n      element,\n      entryId,\n      fieldApiId,\n      locale,\n      lastUpdated: Date.now(),\n    };\n\n    const key = this.createRegistryKey(entryId, fieldApiId, locale);\n\n    // Initialize array if it doesn't exist\n    if (!this.registry[key]) {\n      this.registry[key] = [];\n    }\n\n    // Check if element is already registered\n    const existingIndex = this.registry[key].findIndex((reg) => reg.element === element);\n    if (existingIndex >= 0) {\n      // Update existing registration\n      this.registry[key][existingIndex] = registeredElement;\n    } else {\n      // Add new registration\n      this.registry[key].push(registeredElement);\n    }\n\n    if (this.config.debug) {\n      console.log(`[FieldRegistry] Registered element:`, {\n        entryId,\n        fieldApiId,\n        locale,\n        element: element.tagName,\n      });\n    }\n  }\n\n  private updateElementRegistration(element: HTMLElement): void {\n    // Remove old registrations for this element\n    this.unregisterElement(element);\n\n    // Re-register with new attributes\n    if (this.hasHygraphAttributes(element)) {\n      this.registerElement(element);\n    }\n  }\n\n  private unregisterElement(element: HTMLElement): void {\n    for (const [key, elements] of Object.entries(this.registry)) {\n      const filteredElements = elements.filter((reg) => reg.element !== element);\n      if (filteredElements.length === 0) {\n        delete this.registry[key];\n      } else {\n        this.registry[key] = filteredElements;\n      }\n    }\n  }\n\n  private createRegistryKey(entryId: string, fieldApiId?: string, locale?: string): RegistryKey {\n    const parts = [entryId];\n    if (fieldApiId) parts.push(fieldApiId);\n    if (locale) parts.push(locale);\n    return parts.join(':');\n  }\n\n  /**\n   * Get registry statistics for debugging\n   */\n  getStats(): {\n    totalElements: number;\n    entriesCount: number;\n    fieldsCount: number;\n  } {\n    const entries = new Set<string>();\n    const fields = new Set<string>();\n    let totalElements = 0;\n\n    for (const elements of Object.values(this.registry)) {\n      totalElements += elements.length;\n      for (const element of elements) {\n        entries.add(element.entryId);\n        if (element.fieldApiId) {\n          fields.add(`${element.entryId}:${element.fieldApiId}`);\n        }\n      }\n    }\n\n    return {\n      totalElements,\n      entriesCount: entries.size,\n      fieldsCount: fields.size,\n    };\n  }\n\n  /**\n   * Get all registry keys (for debugging)\n   */\n  getRegistryKeys(): RegistryKey[] {\n    return Object.keys(this.registry);\n  }\n}","/**\n * MessageBridge - Handles postMessage communication with Studio\n * Provides reliable message sending with origin validation and error handling\n */\n\nimport type { SDKMessage, StudioMessage } from '../types';\n\nexport interface MessageBridgeConfig {\n  debug?: boolean;\n  allowedOrigins: string[];\n  onMessage: (message: StudioMessage) => void;\n  onReady?: () => void;\n}\n\nexport class MessageBridge {\n  private config: MessageBridgeConfig;\n  private isConnected = false;\n  private studioOrigin: string | null = null;\n  private messageQueue: SDKMessage[] = [];\n  private isDestroyed = false;\n\n  constructor(config: MessageBridgeConfig) {\n    this.config = config;\n    this.setupMessageListener();\n  }\n\n  /**\n   * Send message to Studio\n   */\n  sendMessage(message: SDKMessage): boolean {\n    if (this.isDestroyed) return false;\n\n    if (!this.isConnected || !this.studioOrigin) {\n      // Queue message for when connection is established\n      this.messageQueue.push(message);\n      return false;\n    }\n\n    try {\n      window.parent.postMessage(message, this.studioOrigin);\n\n      if (this.config.debug) {\n        console.log('[MessageBridge] Sent message:', message);\n      }\n\n      return true;\n    } catch (error) {\n      console.error('[MessageBridge] Failed to send message:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Send initial ready message to all allowed origins\n   * Used to establish initial connection when studioOrigin is unknown\n   */\n  sendReadyMessage(message: SDKMessage & { type: 'ready' }): boolean {\n    if (this.isDestroyed) return false;\n\n    let sentSuccessfully = false;\n\n    // Try sending to each allowed origin\n    for (const origin of this.config.allowedOrigins) {\n      try {\n        window.parent.postMessage(message, origin);\n\n        if (this.config.debug) {\n          console.log('[MessageBridge] Sent ready message to origin:', origin, 'message:', message);\n        }\n\n        sentSuccessfully = true;\n      } catch (error) {\n        if (this.config.debug) {\n          console.log('[MessageBridge] Failed to send ready message to origin:', origin, 'error:', error);\n        }\n      }\n    }\n\n    return sentSuccessfully;\n  }\n\n  /**\n   * Check if connected to Studio\n   */\n  isConnectedToStudio(): boolean {\n    return this.isConnected;\n  }\n\n  /**\n   * Get Studio origin\n   */\n  getStudioOrigin(): string | null {\n    return this.studioOrigin;\n  }\n\n  /**\n   * Destroy message bridge\n   */\n  destroy(): void {\n    this.isDestroyed = true;\n    this.isConnected = false;\n    this.studioOrigin = null;\n    this.messageQueue = [];\n    window.removeEventListener('message', this.handleMessage);\n  }\n\n  private setupMessageListener(): void {\n    if (this.config.debug) {\n      console.log('[MessageBridge] Setting up message listener, allowed origins:', this.config.allowedOrigins);\n    }\n    window.addEventListener('message', this.handleMessage);\n\n    // Notify that MessageBridge is ready to receive messages\n    if (this.config.onReady) {\n      // Use setTimeout to ensure the event listener is fully registered\n      setTimeout(() => {\n        this.config.onReady!();\n      }, 0);\n    }\n  }\n\n  private handleMessage = (event: MessageEvent): void => {\n    if (this.isDestroyed) return;\n\n    // Validate origin\n    if (!this.isOriginAllowed(event.origin)) {\n      if (this.config.debug) {\n        console.log('[MessageBridge] Ignored message from disallowed origin:', event.origin);\n      }\n      return;\n    }\n\n    // Validate message structure\n    const message = event.data;\n    if (!this.isValidStudioMessage(message)) {\n      if (this.config.debug) {\n        console.log('[MessageBridge] Ignored invalid message:', message);\n      }\n      return;\n    }\n\n    if (this.config.debug) {\n      console.log('[MessageBridge] Received message:', message);\n    }\n\n    // Handle connection establishment\n    if (message.type === 'init') {\n      this.handleConnection(event.origin);\n    }\n\n    // Forward message to handler\n    this.config.onMessage(message);\n  };\n\n  private isOriginAllowed(origin: string): boolean {\n    return this.config.allowedOrigins.includes(origin) ||\n           this.config.allowedOrigins.some(allowed => {\n             // Support wildcard origins like *.hygraph.com\n             if (allowed.includes('*')) {\n               const pattern = allowed.replace(/\\*/g, '.*');\n               return new RegExp(`^${pattern}$`).test(origin);\n             }\n             return false;\n           });\n  }\n\n  private isValidStudioMessage(message: any): message is StudioMessage {\n    if (!message || typeof message !== 'object') return false;\n    if (typeof message.type !== 'string') return false;\n    if (typeof message.timestamp !== 'number') return false;\n\n    // Type-specific validation\n    switch (message.type) {\n      case 'init':\n        return typeof message.studioOrigin === 'string';\n\n      case 'field-update':\n        return (\n          typeof message.entryId === 'string' &&\n          typeof message.fieldApiId === 'string' &&\n          typeof message.fieldType === 'string' &&\n          message.newValue !== undefined\n        );\n\n      case 'focus-field':\n        return typeof message.fieldApiId === 'string';\n\n      case 'bulk-update':\n        return Array.isArray(message.changes);\n\n      case 'content-saved':\n        return typeof message.entryId === 'string';\n\n      case 'disconnect':\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  private handleConnection(origin: string): void {\n    if (!this.isConnected) {\n      this.isConnected = true;\n      this.studioOrigin = origin;\n\n      if (this.config.debug) {\n        console.log('[MessageBridge] Connected to Studio:', origin);\n      }\n\n      // Send queued messages\n      this.flushMessageQueue();\n    }\n  }\n\n  private flushMessageQueue(): void {\n    const messages = [...this.messageQueue];\n    this.messageQueue = [];\n\n    for (const message of messages) {\n      this.sendMessage(message);\n    }\n\n    if (this.config.debug && messages.length > 0) {\n      console.log(`[MessageBridge] Sent ${messages.length} queued messages`);\n    }\n  }\n}","/**\n * ContentUpdater - Handles seamless content updates without page refresh\n * Supports different field types: text, rich text, assets, components\n */\n\nimport type {\n  InspectorConfig,\n  FieldUpdate,\n  UpdateResult,\n  RichTextAST,\n  AssetData,\n  ComponentData,\n  LocationData,\n} from '../types';\n\nexport class ContentUpdater {\n  private config: InspectorConfig;\n  private updateQueue: Map<string, FieldUpdate> = new Map();\n  private isDestroyed = false;\n\n  constructor(config: InspectorConfig) {\n    this.config = config;\n  }\n\n  /**\n   * Update a single field with new content\n   */\n  async updateField(update: FieldUpdate): Promise<UpdateResult> {\n    if (this.isDestroyed) {\n      return { success: false, error: 'ContentUpdater is destroyed' };\n    }\n\n    try {\n      // Debounce updates\n      const updateKey = `${update.entryId}:${update.fieldApiId}:${update.locale || ''}`;\n      this.updateQueue.set(updateKey, update);\n\n      // Wait for debounce delay\n      await this.delay(this.config.updateDelay || 50);\n\n      // Check if this update is still the latest\n      const latestUpdate = this.updateQueue.get(updateKey);\n      if (latestUpdate !== update) {\n        return { success: true }; // Superseded by newer update\n      }\n\n      // Remove from queue\n      this.updateQueue.delete(updateKey);\n\n      // Find target elements\n      const elements = this.findElements(update.entryId, update.fieldApiId, update.locale);\n      if (elements.length === 0) {\n        return { success: false, error: 'No matching elements found' };\n      }\n\n      // Update all matching elements\n      let hasError = false;\n      let lastError = '';\n\n      for (const element of elements) {\n        try {\n          await this.updateElement(element, update);\n        } catch (error) {\n          hasError = true;\n          lastError = error instanceof Error ? error.message : String(error);\n          console.error('[ContentUpdater] Failed to update element:', error);\n        }\n      }\n\n      if (hasError) {\n        return { success: false, error: lastError };\n      }\n\n      if (this.config.debug) {\n        console.log('[ContentUpdater] Updated field:', {\n          entryId: update.entryId,\n          fieldApiId: update.fieldApiId,\n          locale: update.locale,\n          elementsCount: elements.length,\n        });\n      }\n\n      return { success: true, element: elements[0] };\n\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : String(error);\n      console.error('[ContentUpdater] Update failed:', error);\n      return { success: false, error: errorMessage };\n    }\n  }\n\n  /**\n   * Destroy content updater\n   */\n  destroy(): void {\n    this.isDestroyed = true;\n    this.updateQueue.clear();\n  }\n\n  private findElements(entryId: string, fieldApiId?: string, locale?: string): HTMLElement[] {\n    const elements: HTMLElement[] = [];\n\n    // Build selector\n    let selector = `[data-hygraph-entry-id=\"${entryId}\"]`;\n    if (fieldApiId) {\n      selector += `[data-hygraph-field-api-id=\"${fieldApiId}\"]`;\n    }\n    if (locale) {\n      selector += `[data-hygraph-field-locale=\"${locale}\"]`;\n    }\n\n    const found = document.querySelectorAll<HTMLElement>(selector);\n    elements.push(...Array.from(found));\n\n    return elements;\n  }\n\n  private async updateElement(element: HTMLElement, update: FieldUpdate): Promise<void> {\n    switch (update.fieldType) {\n      case 'STRING':\n      case 'ID':\n        this.updateTextField(element, update.newValue);\n        break;\n\n      case 'RICHTEXT':\n        await this.updateRichTextField(element, update.newValue);\n        break;\n\n      case 'INT':\n      case 'FLOAT':\n        this.updateNumberField(element, update.newValue);\n        break;\n\n      case 'BOOLEAN':\n        this.updateBooleanField(element, update.newValue);\n        break;\n\n      case 'DATETIME':\n      case 'DATE':\n        this.updateDateField(element, update.newValue);\n        break;\n\n      case 'ASSET':\n        await this.updateAssetField(element, update.newValue);\n        break;\n\n      case 'LOCATION':\n        this.updateLocationField(element, update.newValue);\n        break;\n\n      case 'COLOR':\n        this.updateColorField(element, update.newValue);\n        break;\n\n      case 'COMPONENT':\n        await this.updateComponentField(element, update.newValue);\n        break;\n\n      case 'JSON':\n        this.updateJsonField(element, update.newValue);\n        break;\n\n      case 'ENUMERATION':\n        this.updateTextField(element, update.newValue);\n        break;\n\n      default:\n        throw new Error(`Unsupported field type: ${update.fieldType}`);\n    }\n  }\n\n  private updateTextField(element: HTMLElement, newValue: string): void {\n    if (!newValue && newValue !== '') return;\n\n    // Update text content\n    if (element.tagName === 'INPUT' || element.tagName === 'TEXTAREA') {\n      (element as HTMLInputElement).value = newValue;\n    } else {\n      element.textContent = newValue;\n    }\n  }\n\n  private async updateRichTextField(element: HTMLElement, richTextAST: RichTextAST): Promise<void> {\n    if (!richTextAST || !richTextAST.children) return;\n\n    try {\n      // Convert rich text AST to HTML\n      const htmlContent = this.richTextToHTML(richTextAST);\n\n      // Use morphdom if available for efficient DOM updates\n      if (this.hasMorphdom()) {\n        const tempElement = document.createElement(element.tagName);\n        tempElement.innerHTML = htmlContent;\n        (window as any).morphdom(element, tempElement);\n      } else {\n        // Fallback to innerHTML replacement\n        element.innerHTML = htmlContent;\n      }\n    } catch (error) {\n      console.error('[ContentUpdater] Rich text update failed:', error);\n      throw error;\n    }\n  }\n\n  private updateNumberField(element: HTMLElement, newValue: number): void {\n    if (newValue === null || newValue === undefined) return;\n\n    const stringValue = String(newValue);\n\n    if (element.tagName === 'INPUT') {\n      (element as HTMLInputElement).value = stringValue;\n    } else {\n      element.textContent = stringValue;\n    }\n  }\n\n  private updateBooleanField(element: HTMLElement, newValue: boolean): void {\n    if (element.tagName === 'INPUT' && (element as HTMLInputElement).type === 'checkbox') {\n      (element as HTMLInputElement).checked = newValue;\n    } else {\n      element.textContent = String(newValue);\n    }\n  }\n\n  private updateDateField(element: HTMLElement, newValue: string): void {\n    if (!newValue) return;\n\n    // Parse and format date appropriately\n    const date = new Date(newValue);\n    const formattedDate = date.toLocaleDateString();\n\n    if (element.tagName === 'INPUT' && (element as HTMLInputElement).type === 'date') {\n      (element as HTMLInputElement).value = newValue.split('T')[0];\n    } else {\n      element.textContent = formattedDate;\n    }\n  }\n\n  private async updateAssetField(element: HTMLElement, asset: AssetData | AssetData[]): Promise<void> {\n    if (!asset) return;\n\n    // Handle array of assets\n    if (Array.isArray(asset)) {\n      if (asset.length > 0) {\n        await this.updateSingleAsset(element, asset[0]);\n      }\n      return;\n    }\n\n    await this.updateSingleAsset(element, asset);\n  }\n\n  private async updateSingleAsset(element: HTMLElement, asset: AssetData): Promise<void> {\n    if (element.tagName === 'IMG') {\n      const img = element as HTMLImageElement;\n      img.src = asset.url;\n      if (asset.alt) img.alt = asset.alt;\n      if (asset.width) img.width = asset.width;\n      if (asset.height) img.height = asset.height;\n    } else if (element.tagName === 'VIDEO') {\n      const video = element as HTMLVideoElement;\n      video.src = asset.url;\n    } else if (element.tagName === 'AUDIO') {\n      const audio = element as HTMLAudioElement;\n      audio.src = asset.url;\n    } else if (element.tagName === 'A') {\n      const link = element as HTMLAnchorElement;\n      link.href = asset.url;\n      if (!link.textContent) {\n        link.textContent = asset.fileName;\n      }\n    } else {\n      // For other elements, create appropriate child element\n      element.innerHTML = `<img src=\"${asset.url}\" alt=\"${asset.alt || ''}\" />`;\n    }\n  }\n\n  private updateLocationField(element: HTMLElement, location: LocationData): void {\n    if (!location || typeof location.latitude !== 'number' || typeof location.longitude !== 'number') {\n      return;\n    }\n\n    const locationText = `${location.latitude}, ${location.longitude}`;\n    element.textContent = locationText;\n\n    // Update data attributes for map integration\n    element.setAttribute('data-latitude', String(location.latitude));\n    element.setAttribute('data-longitude', String(location.longitude));\n  }\n\n  private updateColorField(element: HTMLElement, color: string): void {\n    if (!color) return;\n\n    element.textContent = color;\n\n    // Apply color as background or text color\n    if (element.style) {\n      element.style.backgroundColor = color;\n    }\n  }\n\n  private async updateComponentField(element: HTMLElement, componentData: ComponentData): Promise<void> {\n    if (!componentData) return;\n\n    try {\n      // This is a simplified component update - in a real implementation,\n      // you might need framework-specific rendering logic\n      const componentHtml = this.renderComponent(componentData);\n\n      if (this.hasMorphdom()) {\n        const tempElement = document.createElement(element.tagName);\n        tempElement.innerHTML = componentHtml;\n        (window as any).morphdom(element, tempElement);\n      } else {\n        element.innerHTML = componentHtml;\n      }\n    } catch (error) {\n      console.error('[ContentUpdater] Component update failed:', error);\n      throw error;\n    }\n  }\n\n  private updateJsonField(element: HTMLElement, jsonData: any): void {\n    if (jsonData === null || jsonData === undefined) return;\n\n    const jsonString = JSON.stringify(jsonData, null, 2);\n    element.textContent = jsonString;\n  }\n\n  private richTextToHTML(richTextAST: RichTextAST): string {\n    if (!richTextAST.children) return '';\n\n    return richTextAST.children.map(node => this.renderRichTextNode(node)).join('');\n  }\n\n  private renderRichTextNode(node: any): string {\n    if (node.text) {\n      return this.escapeHtml(node.text);\n    }\n\n    const children = node.children ? node.children.map((child: any) => this.renderRichTextNode(child)).join('') : '';\n\n    switch (node.type) {\n      case 'paragraph':\n        return `<p>${children}</p>`;\n      case 'heading-one':\n        return `<h1>${children}</h1>`;\n      case 'heading-two':\n        return `<h2>${children}</h2>`;\n      case 'heading-three':\n        return `<h3>${children}</h3>`;\n      case 'heading-four':\n        return `<h4>${children}</h4>`;\n      case 'heading-five':\n        return `<h5>${children}</h5>`;\n      case 'heading-six':\n        return `<h6>${children}</h6>`;\n      case 'block-quote':\n        return `<blockquote>${children}</blockquote>`;\n      case 'bulleted-list':\n        return `<ul>${children}</ul>`;\n      case 'numbered-list':\n        return `<ol>${children}</ol>`;\n      case 'list-item':\n        return `<li>${children}</li>`;\n      case 'link':\n        return `<a href=\"${node.href || ''}\">${children}</a>`;\n      case 'bold':\n        return `<strong>${children}</strong>`;\n      case 'italic':\n        return `<em>${children}</em>`;\n      case 'underline':\n        return `<u>${children}</u>`;\n      case 'code':\n        return `<code>${children}</code>`;\n      default:\n        return children;\n    }\n  }\n\n  private renderComponent(componentData: ComponentData): string {\n    // Basic component rendering - this would be more sophisticated in practice\n    const typename = componentData.__typename;\n    const fields = Object.entries(componentData)\n      .filter(([key]) => key !== '__typename' && key !== 'id')\n      .map(([key, value]) => `<div data-field=\"${key}\">${this.escapeHtml(String(value))}</div>`)\n      .join('');\n\n    return `<div data-component=\"${typename}\">${fields}</div>`;\n  }\n\n  private escapeHtml(text: string): string {\n    const div = document.createElement('div');\n    div.textContent = text;\n    return div.innerHTML;\n  }\n\n  private hasMorphdom(): boolean {\n    return typeof (window as any).morphdom === 'function';\n  }\n\n  private delay(ms: number): Promise<void> {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n}","/**\n * OverlayManager - Creates and manages visual overlays for Inspector elements\n * Provides hover effects and edit buttons for content elements\n */\n\nimport type { InspectorConfig, RegisteredElement } from '../types';\n\nexport class OverlayManager {\n  private config: InspectorConfig;\n  private overlayElement: HTMLElement | null = null;\n  private editButtonElement: HTMLElement | null = null;\n  private currentTarget: HTMLElement | null = null;\n  private isDestroyed = false;\n\n  constructor(config: InspectorConfig) {\n    this.config = config;\n    this.createOverlayElements();\n    this.setupEventListeners();\n  }\n\n  /**\n   * Show overlay for a specific element\n   */\n  showOverlay(element: HTMLElement, registeredElement: RegisteredElement): void {\n    if (this.isDestroyed || !this.config.overlayEnabled) return;\n\n    this.currentTarget = element;\n    this.updateOverlayPosition(element);\n    this.updateEditButton(registeredElement);\n    this.showOverlayElements();\n  }\n\n  /**\n   * Hide overlay\n   */\n  hideOverlay(): void {\n    if (this.isDestroyed) return;\n\n    this.currentTarget = null;\n    this.hideOverlayElements();\n  }\n\n  /**\n   * Destroy overlay manager\n   */\n  destroy(): void {\n    this.isDestroyed = true;\n    this.removeOverlayElements();\n    this.removeEventListeners();\n  }\n\n  private createOverlayElements(): void {\n    // Create overlay border element\n    this.overlayElement = document.createElement('div');\n    this.overlayElement.id = 'hygraph-inspector-overlay';\n    this.overlayElement.style.cssText = `\n      position: fixed;\n      pointer-events: none;\n      z-index: 9999;\n      border: 2px solid #3B82F6;\n      background: rgba(59, 130, 246, 0.1);\n      border-radius: 4px;\n      display: none;\n      transition: all 0.2s ease;\n      box-sizing: border-box;\n    `;\n\n    // Create edit button element\n    this.editButtonElement = document.createElement('button');\n    this.editButtonElement.id = 'hygraph-inspector-edit-button';\n    this.editButtonElement.innerHTML = `\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        <path d=\"m18.5 2.5 3 3L12 15l-4 1 1-4 9.5-9.5z\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n      </svg>\n      Edit\n    `;\n    this.editButtonElement.style.cssText = `\n      position: fixed;\n      z-index: 10000;\n      background: #3B82F6;\n      color: white;\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      border-radius: 6px;\n      padding: 8px 12px;\n      font-size: 14px;\n      font-weight: 500;\n      cursor: pointer;\n      display: none;\n      align-items: center;\n      gap: 6px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15), 0 2px 4px rgba(0, 0, 0, 0.1);\n      transition: all 0.2s ease;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', sans-serif;\n      pointer-events: auto;\n      width: 72px;\n      height: 32px;\n      justify-content: center;\n      box-sizing: border-box;\n      backdrop-filter: blur(8px);\n      -webkit-backdrop-filter: blur(8px);\n    `;\n\n    // Add hover effects\n    this.editButtonElement.addEventListener('mouseenter', () => {\n      this.editButtonElement!.style.background = '#2563EB';\n      this.editButtonElement!.style.transform = 'scale(1.05)';\n    });\n\n    this.editButtonElement.addEventListener('mouseleave', () => {\n      this.editButtonElement!.style.background = '#3B82F6';\n      this.editButtonElement!.style.transform = 'scale(1)';\n    });\n\n    // Append to body\n    document.body.appendChild(this.overlayElement);\n    document.body.appendChild(this.editButtonElement);\n  }\n\n  private setupEventListeners(): void {\n    // Mouse move for overlay positioning\n    document.addEventListener('mousemove', this.handleMouseMove);\n    document.addEventListener('mouseleave', this.handleMouseLeave);\n\n    // Scroll handling\n    document.addEventListener('scroll', this.handleScroll, true);\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  private removeEventListeners(): void {\n    document.removeEventListener('mousemove', this.handleMouseMove);\n    document.removeEventListener('mouseleave', this.handleMouseLeave);\n    document.removeEventListener('scroll', this.handleScroll, true);\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  private handleMouseMove = (event: MouseEvent): void => {\n    if (this.isDestroyed) return;\n\n    const target = event.target as HTMLElement;\n\n    // Don't hide overlay if mouse is over our edit button\n    if (target === this.editButtonElement || this.editButtonElement?.contains(target)) {\n      return;\n    }\n\n    const hygraphElement = target.closest('[data-hygraph-entry-id]') as HTMLElement;\n\n    if (hygraphElement && hygraphElement !== this.currentTarget) {\n      // Get registered element data\n      const entryId = hygraphElement.getAttribute('data-hygraph-entry-id');\n      const fieldApiId = hygraphElement.getAttribute('data-hygraph-field-api-id');\n      const locale = hygraphElement.getAttribute('data-hygraph-field-locale');\n\n      if (entryId) {\n        const registeredElement: RegisteredElement = {\n          element: hygraphElement,\n          entryId,\n          fieldApiId: fieldApiId || undefined,\n          locale: locale || undefined,\n        };\n\n        this.showOverlay(hygraphElement, registeredElement);\n      }\n    } else if (!hygraphElement && this.currentTarget) {\n      // Add small delay to prevent flicker when moving to edit button\n      setTimeout(() => {\n        if (this.currentTarget && !this.isMouseOverEditButton(event)) {\n          this.hideOverlay();\n        }\n      }, 50);\n    }\n  };\n\n  private isMouseOverEditButton(event: MouseEvent): boolean {\n    if (!this.editButtonElement) return false;\n\n    const rect = this.editButtonElement.getBoundingClientRect();\n    return (\n      event.clientX >= rect.left &&\n      event.clientX <= rect.right &&\n      event.clientY >= rect.top &&\n      event.clientY <= rect.bottom\n    );\n  }\n\n  private handleMouseLeave = (): void => {\n    this.hideOverlay();\n  };\n\n  private handleScroll = (): void => {\n    if (this.currentTarget) {\n      this.updateOverlayPosition(this.currentTarget);\n    }\n  };\n\n  private handleResize = (): void => {\n    if (this.currentTarget) {\n      this.updateOverlayPosition(this.currentTarget);\n    }\n  };\n\n  private updateOverlayPosition(element: HTMLElement): void {\n    if (!this.overlayElement) return;\n\n    const rect = element.getBoundingClientRect();\n\n    this.overlayElement.style.left = `${rect.left}px`;\n    this.overlayElement.style.top = `${rect.top}px`;\n    this.overlayElement.style.width = `${rect.width}px`;\n    this.overlayElement.style.height = `${rect.height}px`;\n  }\n\n  private updateEditButton(registeredElement: RegisteredElement): void {\n    if (!this.editButtonElement || !this.currentTarget) return;\n\n    const rect = this.currentTarget.getBoundingClientRect();\n    const buttonWidth = 72;\n    const buttonHeight = 32;\n    const padding = 4; // Reduced padding for tighter positioning\n\n    // Always position button inside the element bounds - no gaps!\n    // Try top-right corner first\n    let buttonTop = rect.top + padding;\n    let buttonLeft = rect.right - buttonWidth - padding;\n\n    // If button doesn't fit in top-right, try other corners\n    if (buttonLeft < rect.left + padding) {\n      // Element too narrow - use left edge\n      buttonLeft = rect.left + padding;\n    }\n\n    if (buttonTop + buttonHeight + padding > rect.bottom) {\n      // Element too short - use bottom edge\n      buttonTop = Math.max(rect.top + padding, rect.bottom - buttonHeight - padding);\n    }\n\n    // Final bounds checking - ensure button stays within element\n    buttonLeft = Math.max(rect.left + padding, Math.min(buttonLeft, rect.right - buttonWidth - padding));\n    buttonTop = Math.max(rect.top + padding, Math.min(buttonTop, rect.bottom - buttonHeight - padding));\n\n    this.editButtonElement.style.left = `${buttonLeft}px`;\n    this.editButtonElement.style.top = `${buttonTop}px`;\n\n    // Update button click handler\n    this.editButtonElement.onclick = (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleEditClick(registeredElement);\n    };\n\n    // Update button tooltip\n    const fieldName = registeredElement.fieldApiId || 'entry';\n    this.editButtonElement.title = `Edit ${fieldName}`;\n  }\n\n  private handleEditClick(registeredElement: RegisteredElement): void {\n    // Emit custom event that the Inspector will handle\n    const event = new CustomEvent('hygraph-edit-click', {\n      detail: registeredElement,\n      bubbles: true,\n    });\n\n    document.dispatchEvent(event);\n\n    if (this.config.debug) {\n      console.log('[OverlayManager] Edit button clicked:', registeredElement);\n    }\n  }\n\n  private showOverlayElements(): void {\n    if (this.overlayElement) {\n      this.overlayElement.style.display = 'block';\n    }\n    if (this.editButtonElement) {\n      this.editButtonElement.style.display = 'flex';\n    }\n  }\n\n  private hideOverlayElements(): void {\n    if (this.overlayElement) {\n      this.overlayElement.style.display = 'none';\n    }\n    if (this.editButtonElement) {\n      this.editButtonElement.style.display = 'none';\n    }\n  }\n\n  private removeOverlayElements(): void {\n    if (this.overlayElement) {\n      this.overlayElement.remove();\n      this.overlayElement = null;\n    }\n    if (this.editButtonElement) {\n      this.editButtonElement.remove();\n      this.editButtonElement = null;\n    }\n  }\n}","/**\n * Core Inspector class - Main orchestrator for the Hygraph Inspector SDK\n * Handles element tracking, overlay creation, Studio communication, and content updates\n */\n\nimport { FieldRegistry } from './FieldRegistry';\nimport { MessageBridge } from './MessageBridge';\nimport { ContentUpdater } from './ContentUpdater';\nimport { OverlayManager } from './OverlayManager';\nimport type {\n  InspectorConfig,\n  SaveCallback,\n  SubscriptionConfig,\n  SDKMessage,\n  StudioMessage,\n} from '../types';\n\nexport class Inspector {\n  private config: InspectorConfig;\n  private fieldRegistry: FieldRegistry;\n  private messageBridge: MessageBridge | null = null;\n  private contentUpdater: ContentUpdater;\n  private overlayManager: OverlayManager;\n  private saveCallbacks = new Set<SaveCallback>();\n  private mode: 'iframe' | 'standalone';\n\n  constructor(config: InspectorConfig) {\n    this.config = {\n      debug: false,\n      overlayEnabled: true,\n      updateDelay: 50,\n      retryAttempts: 3,\n      autoConnect: true,\n      allowedOrigins: ['https://app.hygraph.com', 'http://localhost:3000'],\n      ...config,\n    };\n\n    // Determine operating mode\n    this.mode = this.determineMode();\n\n    // Initialize core components\n    this.fieldRegistry = new FieldRegistry(this.config);\n    this.contentUpdater = new ContentUpdater(this.config);\n    this.overlayManager = new OverlayManager(this.config);\n\n    // Initialize based on mode\n    if (this.mode === 'iframe') {\n      this.initializeIframeMode();\n    } else {\n      this.initializeStandaloneMode();\n    }\n\n    // Set up edit click handler\n    this.setupEditClickHandler();\n\n    // Make SDK available globally for debugging\n    if (this.config.debug) {\n      window.__HYGRAPH_INSPECTOR__ = this;\n    }\n\n    this.emitEvent('inspector:ready', { inspector: this });\n  }\n\n  /**\n   * Subscribe to save events - for framework refresh integration\n   */\n  subscribe(eventType: 'save', config: SubscriptionConfig): () => void {\n    if (eventType === 'save') {\n      this.saveCallbacks.add(config.callback);\n      return () => this.saveCallbacks.delete(config.callback);\n    }\n    throw new Error(`Unknown event type: ${eventType}`);\n  }\n\n  /**\n   * Get current SDK version\n   */\n  getVersion(): string {\n    return '2.0.0';\n  }\n\n  /**\n   * Get current mode\n   */\n  getMode(): 'iframe' | 'standalone' {\n    return this.mode;\n  }\n\n  /**\n   * Check if Inspector is connected to Studio\n   */\n  isConnected(): boolean {\n    return this.messageBridge?.isConnectedToStudio() ?? false;\n  }\n\n  /**\n   * Refresh element registry - scan for new elements\n   */\n  refresh(): void {\n    this.fieldRegistry.refresh();\n  }\n\n  /**\n   * Destroy Inspector and clean up resources\n   */\n  destroy(): void {\n    this.fieldRegistry.destroy();\n    this.messageBridge?.destroy();\n    this.contentUpdater.destroy();\n    this.overlayManager.destroy();\n    this.saveCallbacks.clear();\n\n    document.removeEventListener('hygraph-edit-click', this.handleEditClick as EventListener);\n\n    if (window.__HYGRAPH_INSPECTOR__ === this) {\n      delete window.__HYGRAPH_INSPECTOR__;\n    }\n  }\n\n  private determineMode(): 'iframe' | 'standalone' {\n    if (this.config.mode === 'iframe') return 'iframe';\n    if (this.config.mode === 'standalone') return 'standalone';\n\n    // Auto-detect mode\n    try {\n      return window.self === window.top ? 'standalone' : 'iframe';\n    } catch (e) {\n      // Cross-origin restrictions may throw an error\n      return 'iframe';\n    }\n  }\n\n  private initializeIframeMode(): void {\n    if (this.config.debug) {\n      console.log('[Inspector] Initializing in iframe mode');\n    }\n\n    // Initialize MessageBridge for Studio communication\n    this.messageBridge = new MessageBridge({\n      debug: this.config.debug,\n      allowedOrigins: this.getAllowedOrigins(),\n      onMessage: this.handleStudioMessage.bind(this),\n      onReady: () => {\n        if (this.config.debug) {\n          console.log('[Inspector] MessageBridge ready, sending ready message to Studio');\n        }\n        // Send ready message to Studio only after MessageBridge is ready\n        if (this.config.autoConnect) {\n          this.sendReadyMessage();\n        }\n      },\n    });\n\n    // Set up edit button handlers for postMessage\n    this.setupIframeEditHandlers();\n  }\n\n  private initializeStandaloneMode(): void {\n    if (this.config.debug) {\n      console.log('[Inspector] Initializing in standalone mode');\n    }\n\n    // Validate required config for standalone mode\n    if (!this.config.studioUrl && !this.isProductionEndpoint()) {\n      console.warn('[Inspector] Consider setting studioUrl for development endpoints');\n    }\n\n    // Set up edit button handlers for new tab opening\n    this.setupStandaloneEditHandlers();\n  }\n\n  private getAllowedOrigins(): string[] {\n    const origins = [...(this.config.allowedOrigins || [])];\n\n    // Add custom studio URL if provided\n    if (this.config.studioUrl) {\n      origins.push(new URL(this.config.studioUrl).origin);\n    }\n\n    return origins;\n  }\n\n  private isProductionEndpoint(): boolean {\n    return this.config.endpoint.includes('api.hygraph.com') ||\n           this.config.endpoint.includes('.hygraph.com');\n  }\n\n  private sendReadyMessage(): void {\n    if (!this.messageBridge) return;\n\n    const message: SDKMessage = {\n      type: 'ready',\n      sdkVersion: this.getVersion(),\n      timestamp: Date.now(),\n    };\n\n    // Use sendReadyMessage for initial connection (doesn't require known studioOrigin)\n    this.messageBridge.sendReadyMessage(message);\n  }\n\n  private handleStudioMessage(message: StudioMessage): void {\n    switch (message.type) {\n      case 'init':\n        this.handleInitMessage(message);\n        break;\n      case 'field-update':\n        this.handleFieldUpdate(message);\n        break;\n      case 'focus-field':\n        this.handleFocusField(message);\n        break;\n      case 'bulk-update':\n        this.handleBulkUpdate(message);\n        break;\n      case 'content-saved':\n        this.handleContentSaved(message);\n        break;\n      case 'disconnect':\n        this.handleDisconnect();\n        break;\n    }\n  }\n\n  private handleInitMessage(message: StudioMessage & { type: 'init' }): void {\n    if (this.config.debug) {\n      console.log('[Inspector] Connected to Studio:', message.studioOrigin);\n    }\n    this.emitEvent('inspector:connected', { studioOrigin: message.studioOrigin });\n  }\n\n  private async handleFieldUpdate(message: StudioMessage & { type: 'field-update' }): Promise<void> {\n    const result = await this.contentUpdater.updateField({\n      entryId: message.entryId,\n      fieldApiId: message.fieldApiId,\n      newValue: message.newValue,\n      locale: message.locale,\n      fieldType: message.fieldType,\n      updateId: message.updateId,\n    });\n\n    // Send result back to Studio\n    if (this.messageBridge) {\n      const responseMessage: SDKMessage = result.success\n        ? {\n            type: 'update-complete',\n            updateId: message.updateId,\n            timestamp: Date.now(),\n          }\n        : {\n            type: 'update-failed',\n            updateId: message.updateId,\n            error: result.error || 'Update failed',\n            timestamp: Date.now(),\n          };\n\n      this.messageBridge.sendMessage(responseMessage);\n    }\n\n    // Emit local event\n    if (result.success) {\n      this.emitEvent('inspector:field-updated', {\n        entryId: message.entryId,\n        fieldApiId: message.fieldApiId,\n        newValue: message.newValue,\n      });\n    } else {\n      this.emitEvent('inspector:update-failed', {\n        entryId: message.entryId,\n        fieldApiId: message.fieldApiId,\n        error: result.error || 'Update failed',\n      });\n    }\n  }\n\n  private handleFocusField(message: StudioMessage & { type: 'focus-field' }): void {\n    // Find and focus the field element\n    const elements = this.fieldRegistry.getElementsForField(\n      message.fieldApiId,\n      message.locale\n    );\n\n    if (elements.length > 0) {\n      const element = elements[0].element;\n      element.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\n      // Try to focus if it's a focusable element\n      if (element instanceof HTMLInputElement || element instanceof HTMLTextAreaElement) {\n        element.focus();\n      }\n    }\n  }\n\n  private async handleBulkUpdate(message: StudioMessage & { type: 'bulk-update' }): Promise<void> {\n    const results = await Promise.all(\n      message.changes.map(change => this.contentUpdater.updateField(change))\n    );\n\n    // Check if all updates succeeded\n    const allSucceeded = results.every(result => result.success);\n    const errors = results.filter(result => !result.success).map(result => result.error);\n\n    // Send bulk result back to Studio\n    if (this.messageBridge) {\n      const responseMessage: SDKMessage = allSucceeded\n        ? {\n            type: 'update-complete',\n            timestamp: Date.now(),\n          }\n        : {\n            type: 'update-failed',\n            error: `Bulk update failed: ${errors.join(', ')}`,\n            timestamp: Date.now(),\n          };\n\n      this.messageBridge.sendMessage(responseMessage);\n    }\n  }\n\n  private async handleContentSaved(message: StudioMessage & { type: 'content-saved' }): Promise<void> {\n    if (this.config.debug) {\n      console.log('[Inspector] Content saved, triggering framework refresh');\n    }\n\n    // Emit save event\n    this.emitEvent('inspector:content-saved', {\n      entryId: message.entryId,\n      timestamp: message.timestamp\n    });\n\n    // Execute save callbacks for framework integration\n    for (const callback of this.saveCallbacks) {\n      try {\n        await callback(message.entryId);\n      } catch (error) {\n        console.error('[Inspector] Save callback failed:', error);\n      }\n    }\n  }\n\n  private handleDisconnect(): void {\n    if (this.config.debug) {\n      console.log('[Inspector] Disconnected from Studio');\n    }\n    this.emitEvent('inspector:disconnected', {});\n  }\n\n  private setupEditClickHandler(): void {\n    // Set up edit click handler for overlay manager\n    document.addEventListener('hygraph-edit-click', this.handleEditClick as EventListener);\n  }\n\n  private handleEditClick = (event: Event): void => {\n    const customEvent = event as CustomEvent;\n    const registeredElement = customEvent.detail;\n    const element = registeredElement.element;\n\n    if (this.mode === 'iframe') {\n      this.handleIframeEditClick(element);\n    } else {\n      this.handleStandaloneEditClick(element);\n    }\n  };\n\n  private setupIframeEditHandlers(): void {\n    // Edit handlers are now managed by OverlayManager\n    // This method is kept for compatibility but overlay handles the clicks\n  }\n\n  private setupStandaloneEditHandlers(): void {\n    // Edit handlers are now managed by OverlayManager\n    // This method is kept for compatibility but overlay handles the clicks\n  }\n\n  private handleIframeEditClick(element: HTMLElement): void {\n    const entryId = element.getAttribute('data-hygraph-entry-id');\n    const fieldApiId = element.getAttribute('data-hygraph-field-api-id') || undefined;\n    const locale = element.getAttribute('data-hygraph-field-locale') || undefined;\n\n    if (!entryId) return;\n\n    // Send field click message to Studio\n    if (this.messageBridge) {\n      const message: SDKMessage = {\n        type: 'field-click',\n        entryId,\n        fieldApiId,\n        locale,\n        timestamp: Date.now(),\n      };\n\n      const success = this.messageBridge.sendMessage(message);\n\n      // Fallback to standalone mode if not connected\n      if (!success && this.config.standalone?.fallbackToNewTab !== false) {\n        if (this.config.debug) {\n          console.log('[Inspector] Studio not connected, falling back to new tab');\n        }\n        this.handleStandaloneEditClick(element);\n      }\n    }\n\n    // Emit event\n    this.emitEvent('inspector:field-click', {\n      entryId,\n      fieldApiId,\n      locale,\n      mode: this.mode\n    });\n  }\n\n  private handleStandaloneEditClick(element: HTMLElement): void {\n    const entryId = element.getAttribute('data-hygraph-entry-id');\n    const fieldApiId = element.getAttribute('data-hygraph-field-api-id') || undefined;\n    const locale = element.getAttribute('data-hygraph-field-locale') || undefined;\n\n    if (!entryId) return;\n\n    if (!this.config.endpoint) {\n      console.error('[Inspector] Cannot open Studio - no endpoint configured');\n      return;\n    }\n\n    // Construct Studio resource route URL\n    const studioUrl = this.buildStudioUrl(entryId, fieldApiId, locale);\n\n    // Open in new tab\n    window.open(studioUrl, '_blank', 'noopener,noreferrer');\n\n    if (this.config.debug) {\n      console.log('[Inspector] Opened Studio in new tab:', studioUrl);\n    }\n\n    // Emit event\n    this.emitEvent('inspector:field-click', {\n      entryId,\n      fieldApiId,\n      locale,\n      mode: this.mode\n    });\n  }\n\n  private buildStudioUrl(entryId: string, fieldApiId?: string, locale?: string): string {\n    const baseUrl = this.config.studioUrl || 'https://app.hygraph.com';\n    const params = new URLSearchParams({\n      endpoint: this.config.endpoint,\n      entryId,\n    });\n\n    if (fieldApiId) params.set('fieldApiId', fieldApiId);\n    if (locale) params.set('locale', locale);\n\n    return `${baseUrl}/entry?${params.toString()}`;\n  }\n\n  private emitEvent<K extends keyof import('../types').InspectorEvents>(\n    type: K,\n    detail: import('../types').InspectorEvents[K]['detail']\n  ): void {\n    const event = new CustomEvent(type, { detail });\n    document.dispatchEvent(event);\n  }\n}","/**\n * React component wrapper for the Hygraph Inspector SDK\n * Provides React-friendly interface with hooks and context\n */\n\nimport React, { createContext, useContext, useEffect, useRef, ReactNode } from 'react';\nimport { Inspector } from '../core/Inspector';\nimport type { InspectorConfig, SaveCallback } from '../types';\n\ninterface HygraphInspectorContextType {\n  inspector: Inspector | null;\n  isReady: boolean;\n  isConnected: boolean;\n}\n\nconst HygraphInspectorContext = createContext<HygraphInspectorContextType>({\n  inspector: null,\n  isReady: false,\n  isConnected: false,\n});\n\nexport interface HygraphInspectorProps extends InspectorConfig {\n  children: ReactNode;\n  onReady?: (inspector: Inspector) => void;\n  onConnected?: (studioOrigin: string) => void;\n  onDisconnected?: () => void;\n  onSave?: SaveCallback;\n  onError?: (error: Error) => void;\n}\n\n/**\n * HygraphInspector React component\n * Wraps your app to enable live preview functionality\n */\nexport function HygraphInspector({\n  children,\n  onReady,\n  onConnected,\n  onDisconnected,\n  onSave,\n  onError,\n  ...config\n}: HygraphInspectorProps) {\n  const inspectorRef = useRef<Inspector | null>(null);\n  const [contextValue, setContextValue] = React.useState<HygraphInspectorContextType>({\n    inspector: null,\n    isReady: false,\n    isConnected: false,\n  });\n\n  useEffect(() => {\n    // Initialize Inspector\n    try {\n      const inspector = new Inspector(config);\n      inspectorRef.current = inspector;\n\n      // Set up event listeners\n      const handleReady = (event: CustomEvent<{ inspector: Inspector }>) => {\n        setContextValue(prev => ({\n          ...prev,\n          inspector: event.detail.inspector,\n          isReady: true,\n        }));\n        onReady?.(event.detail.inspector);\n      };\n\n      const handleConnected = (event: CustomEvent<{ studioOrigin: string }>) => {\n        setContextValue(prev => ({\n          ...prev,\n          isConnected: true,\n        }));\n        onConnected?.(event.detail.studioOrigin);\n      };\n\n      const handleDisconnected = () => {\n        setContextValue(prev => ({\n          ...prev,\n          isConnected: false,\n        }));\n        onDisconnected?.();\n      };\n\n      const handleError = (event: CustomEvent<{ error: Error }>) => {\n        onError?.(event.detail.error);\n      };\n\n      // Add event listeners\n      document.addEventListener('inspector:ready', handleReady as EventListener);\n      document.addEventListener('inspector:connected', handleConnected as EventListener);\n      document.addEventListener('inspector:disconnected', handleDisconnected as EventListener);\n      document.addEventListener('inspector:error', handleError as EventListener);\n\n      // Set up save subscription\n      let unsubscribe: (() => void) | undefined;\n      if (onSave) {\n        unsubscribe = inspector.subscribe('save', { callback: onSave });\n      }\n\n      return () => {\n        // Cleanup\n        document.removeEventListener('inspector:ready', handleReady as EventListener);\n        document.removeEventListener('inspector:connected', handleConnected as EventListener);\n        document.removeEventListener('inspector:disconnected', handleDisconnected as EventListener);\n        document.removeEventListener('inspector:error', handleError as EventListener);\n\n        unsubscribe?.();\n        inspector.destroy();\n      };\n    } catch (error) {\n      console.error('[HygraphInspector] Failed to initialize:', error);\n      onError?.(error instanceof Error ? error : new Error(String(error)));\n      return () => {}; // Return cleanup function even on error\n    }\n  }, [\n    config.endpoint,\n    config.debug,\n    config.studioUrl,\n    config.mode,\n    onReady,\n    onConnected,\n    onDisconnected,\n    onSave,\n    onError,\n  ]);\n\n  return (\n    <HygraphInspectorContext.Provider value={contextValue}>\n      {children}\n    </HygraphInspectorContext.Provider>\n  );\n}\n\n/**\n * Hook to access the Inspector instance from React components\n */\nexport function useInspector(): HygraphInspectorContextType {\n  const context = useContext(HygraphInspectorContext);\n  if (!context) {\n    throw new Error('useInspector must be used within a HygraphInspector component');\n  }\n  return context;\n}\n\n/**\n * Hook specifically for save event subscription\n * Automatically sets up and cleans up the subscription\n */\nexport function useInspectorSave(callback: SaveCallback): void {\n  const { inspector } = useInspector();\n\n  useEffect(() => {\n    if (!inspector) return;\n\n    const unsubscribe = inspector.subscribe('save', { callback });\n    return unsubscribe;\n  }, [inspector, callback]);\n}\n\n/**\n * Hook for accessing Inspector events\n */\nexport function useInspectorEvent<K extends keyof import('../types').InspectorEvents>(\n  eventType: K,\n  handler: (event: import('../types').InspectorEvents[K]) => void\n): void {\n  useEffect(() => {\n    const eventHandler = (event: Event) => {\n      handler(event as import('../types').InspectorEvents[K]);\n    };\n\n    document.addEventListener(eventType, eventHandler);\n    return () => document.removeEventListener(eventType, eventHandler);\n  }, [eventType, handler]);\n}","/**\n * React hooks for the Hygraph Inspector SDK\n * Provides convenient hooks for common Inspector operations\n */\n\nimport { useEffect, useCallback, useRef } from 'react';\nimport { useInspector, useInspectorSave, useInspectorEvent } from './HygraphInspector';\n\n/**\n * Hook for framework-specific refresh integration\n * Automatically detects the framework and provides appropriate refresh\n */\nexport function useInspectorRefresh(): {\n  refresh: () => void | Promise<void>;\n  framework: string | null;\n} {\n  const { inspector } = useInspector();\n  const frameworkRef = useRef<string | null>(null);\n\n  // Detect framework on mount\n  useEffect(() => {\n    if (!inspector) return;\n\n    const integration = (inspector as any).frameworkIntegration;\n    const framework = integration?.getFramework();\n    frameworkRef.current = framework?.type || null;\n  }, [inspector]);\n\n  const refresh = useCallback(async () => {\n    if (!inspector) return;\n\n    const integration = (inspector as any).frameworkIntegration;\n    if (integration) {\n      await integration.refresh();\n    } else {\n      window.location.reload();\n    }\n  }, [inspector]);\n\n  return {\n    refresh,\n    framework: frameworkRef.current,\n  };\n}\n\n/**\n * Hook for Next.js router integration\n * Provides automatic refresh using Next.js router.replace\n */\nexport function useInspectorNextjs(): void {\n  const { refresh } = useInspectorRefresh();\n\n  // Try to get Next.js router\n  const getNextRouter = useCallback(() => {\n    if (typeof window === 'undefined') return null;\n\n    // Try multiple ways to access Next.js router\n    const router =\n      (window as any).next?.router ||\n      (window as any).__NEXT_DATA__?.router ||\n      null;\n\n    return router;\n  }, []);\n\n  const nextjsRefresh = useCallback(() => {\n    const router = getNextRouter();\n    if (router && typeof router.replace === 'function') {\n      router.replace(router.asPath || window.location.pathname);\n    } else {\n      refresh();\n    }\n  }, [refresh, getNextRouter]);\n\n  useInspectorSave(nextjsRefresh);\n}\n\n/**\n * Hook for Remix integration\n * Provides automatic refresh using Remix revalidator\n */\nexport function useInspectorRemix(): void {\n  const { refresh } = useInspectorRefresh();\n\n  const getRemixRevalidator = useCallback(() => {\n    if (typeof window === 'undefined') return null;\n\n    return (\n      (window as any).__remixRevalidator ||\n      (window as any).__remixRouterContext?.revalidator ||\n      null\n    );\n  }, []);\n\n  const remixRefresh = useCallback(() => {\n    const revalidator = getRemixRevalidator();\n    if (revalidator && typeof revalidator.revalidate === 'function') {\n      revalidator.revalidate();\n    } else {\n      refresh();\n    }\n  }, [refresh, getRemixRevalidator]);\n\n  useInspectorSave(remixRefresh);\n}\n\n/**\n * Hook for field update events\n * Provides callbacks for when fields are updated\n */\nexport function useInspectorFieldUpdates(\n  onUpdate?: (update: { entryId: string; fieldApiId: string; newValue: any }) => void,\n  onError?: (error: { entryId: string; fieldApiId: string; error: string }) => void\n): void {\n  useInspectorEvent('inspector:field-updated', (event) => {\n    onUpdate?.(event.detail);\n  });\n\n  useInspectorEvent('inspector:update-failed', (event) => {\n    onError?.(event.detail);\n  });\n}\n\n/**\n * Hook for Inspector connection status\n * Provides current connection state and callbacks\n */\nexport function useInspectorConnection(): {\n  isConnected: boolean;\n  isReady: boolean;\n  mode: 'iframe' | 'standalone' | null;\n} {\n  const { inspector, isReady, isConnected } = useInspector();\n\n  const mode = inspector?.getMode() || null;\n\n  return {\n    isConnected,\n    isReady,\n    mode,\n  };\n}\n\n/**\n * Hook for manual Inspector operations\n * Provides methods to manually control the Inspector\n */\nexport function useInspectorActions(): {\n  refresh: () => void;\n  destroy: () => void;\n  getVersion: () => string | null;\n  getMode: () => 'iframe' | 'standalone' | null;\n} {\n  const { inspector } = useInspector();\n\n  const refresh = useCallback(() => {\n    inspector?.refresh();\n  }, [inspector]);\n\n  const destroy = useCallback(() => {\n    inspector?.destroy();\n  }, [inspector]);\n\n  const getVersion = useCallback(() => {\n    return inspector?.getVersion() || null;\n  }, [inspector]);\n\n  const getMode = useCallback(() => {\n    return inspector?.getMode() || null;\n  }, [inspector]);\n\n  return {\n    refresh,\n    destroy,\n    getVersion,\n    getMode,\n  };\n}\n\n/**\n * Hook for debugging and development\n * Provides debugging information and utilities\n */\nexport function useInspectorDebug(): {\n  inspector: any;\n  stats: any;\n  registryKeys: string[];\n  framework: any;\n} {\n  const { inspector } = useInspector();\n\n  const getStats = useCallback(() => {\n    if (!inspector) return null;\n    const fieldRegistry = (inspector as any).fieldRegistry;\n    return fieldRegistry?.getStats() || null;\n  }, [inspector]);\n\n  const getRegistryKeys = useCallback(() => {\n    if (!inspector) return [];\n    const fieldRegistry = (inspector as any).fieldRegistry;\n    return fieldRegistry?.getRegistryKeys() || [];\n  }, [inspector]);\n\n  const getFramework = useCallback(() => {\n    if (!inspector) return null;\n    const frameworkIntegration = (inspector as any).frameworkIntegration;\n    return frameworkIntegration?.getFramework() || null;\n  }, [inspector]);\n\n  return {\n    inspector,\n    stats: getStats(),\n    registryKeys: getRegistryKeys(),\n    framework: getFramework(),\n  };\n}"],"names":["ReactDebugCurrentFrame","jsxRuntimeModule","require$$0","require$$1","React"],"mappings":"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","x_google_ignoreList":[0,1,2]}